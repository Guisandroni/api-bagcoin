// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FrequenciaRecorrencia {
  SEMANAL
  MENSAL
  ANUAL
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
}

model Carteira {
  id         String   @id @default(uuid())
  name       String
  balance    Decimal  @default(0.00)
  created_at DateTime @default(now())

  despesas Despesa[]
  receitas Receita[]
  metas    Meta[]
}

model Despesa {
  id          String                 @id @default(uuid())
  name        String
  balance     Decimal
  description String?
  recorrente  Boolean                @default(false)
  frequencia  FrequenciaRecorrencia?
  proximaData DateTime?

  carteira   Carteira @relation(fields: [carteiraId], references: [id])
  carteiraId String

  category    Category @relation(fields: [categoryId], references: [id])
  categoriaId String

  created_at DateTime @default(now())

  categoryId String
}

model Receita {
  id          String                 @id @default(uuid())
  name        String
  value       Decimal
  description String?
  recorrente  Boolean                @default(false)
  frequencia  FrequenciaRecorrencia?
  proximaData DateTime?

  carteira   Carteira @relation(fields: [carteiraId], references: [id])
  carteiraId String

  category    Category @relation(fields: [categoryId], references: [id])
  categoriaId String

  created_at DateTime @default(now())

  categoryId String
}

model Meta {
  id          String                 @id @default(uuid())
  name        String
  value       Decimal
  description String?
  recorrente  Boolean                @default(false)
  frequencia  FrequenciaRecorrencia?
  proximaData DateTime?
  progresso   Decimal                @default(0.00)

  carteira   Carteira @relation(fields: [carteiraId], references: [id])
  carteiraId String

  category    Category @relation(fields: [categoryId], references: [id])
  categoriaId String

  created_at DateTime @default(now())
  dataFinal  DateTime

  categoryId String
}

model Category {
  id     String  @id @default(uuid())
  name   String
  avatar String?

  Despesa Despesa[]
  Receita Receita[]
  Meta    Meta[]
}
